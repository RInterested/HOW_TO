samples_mean = NULL
for (i in 1 : 1000) samples_mean = c(samples_mean, mean(rnorm(40)))

# Or, exactly the same:

samples_mean = NULL
for (i in 1 : 1000) samples_mean <- c(samples_mean, mean(rnorm(40)))

str(samples_mean)
#Vector [1, 1000]  num [1:1000]
samples_mean
sd(samples_mean)
#[1] 0.1542957

str(samples_mean)
#Vector [1, 1000]  num [1:1000]
samples_mean
sd(samples_mean)
#[1] 0.1542957

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
sqr = seq(1, 100, by=2)
sqr.squared = NULL
for (n in 1:50)
{
  sqr.squared[] = sqr[n]^2 # The empty [ ] is a no-no for these loops.
}
sqr.squared
#numeric(0)

#BUT...

sqr = seq(1, 100, by=2)
sqr.squared = NULL
for (n in 1:50)
{
  sqr.squared[n] = sqr[n]^2
}
str(sqr.squared)
 num [1:50] 1 9 25 49 81 121 169 225 289 361 ...
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# From Omitted Variables Code (in Simulations) - function "variables" stated before loop:

coef_x3 <- NULL
coef_x3_full <- NULL
for (i in 1:1000){
  coef_x3[i] = variables()[1]
  coef_x3_full[i] = variables()[2]
}
mean(coef_x3)
mean(coef_x3_full)

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
tosses <- 30
samsize <- 1000
vector <- NULL
for (i in 1:1000){vector[i] = mean(rbinom(samsize,tosses,0.7))}
head(vector)
